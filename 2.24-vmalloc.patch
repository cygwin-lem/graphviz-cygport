"You can replace malloc with your own implementation, but it has to be a
*working* implementation."  Details:

http://cygwin.com/ml/cygwin/2009-11/msg00114.html

--- origsrc/graphviz-2.24.0/lib/vmalloc/features/vmalloc	2004-12-22 22:04:28.000000000 -0600
+++ src/graphviz-2.24.0/lib/vmalloc/features/vmalloc	2009-11-05 15:41:13.941554200 -0600
@@ -18,17 +18,18 @@ lib mallinfo
 lib mstats
 hdr alloca
 
-std	malloc note{ stuck with standard malloc }end noexecute{
+std	malloc note{ stuck with standard malloc }end execute{
 	_BEGIN_EXTERNS_
 	extern void _exit _ARG_((int));
 	extern char* strdup _ARG_((const char*));
+	static int stuck_with_malloc = 0;
 	#if _STD_
-	char* malloc(unsigned n) { _exit(0); return 0; }
+	char* malloc(unsigned n) { stuck_with_malloc = 1; return 0; }
 	#else
-	char* malloc(n) unsigned n; { _exit(0); return 0; }
+	char* malloc(n) unsigned n; { stuck_with_malloc = 1; return 0; }
 	#endif
 	_END_EXTERNS_
-	main() { strdup("yo"); _exit(1); }
+	main() { strdup("yo"); _exit(stuck_with_malloc); }
 }end
 
 lib alloca note{ alloca exists }end compile{
@@ -44,17 +45,18 @@ mal alloca note{ alloca is based on mall
 	#if _hdr_alloca
 	#include	<alloca.h>
 	#endif
+	static int based_on_malloc = 1;
 	#if _STD_
 	void* malloc(unsigned int size)
 	#else
 	void* malloc(size) unsigned int size;
 	#endif
-	{	exit(0);
+	{	based_on_malloc = 0;
 		return 0;
 	}
 	main()
 	{	alloca(10);
-		return 1;
+		return based_on_malloc;
 	}
 }end
 
