################################################################
__str_version_cyg() {
  # Remove a period from a string "x.y" when both x and y are single-digit.
  printf '%s' "$1" | sed -E 's/^([[:digit:]])\.([[:digit:]])$/\1\2/'
}

################################################################
__current_pkg() {
  THIS_PN="$1"
}

__add_pkg() {
  THIS_PN="$1"
  PKG_NAMES+=" ${THIS_PN}"
}

__set_pkg_property() {
  local LOCAL_PN="$1"
  if [ -z "${LOCAL_PN//[-+\._]/}" ]; then
    LOCAL_PN="${THIS_PN}"
  fi
  local LOCAL_VN="${LOCAL_PN//[-+\.]/_}"
  printf -v "${LOCAL_VN}_$2" "%s" "$3"
}

__append_pkg_property() {
  local LOCAL_PN="$1"
  if [ -z "${LOCAL_PN//[-+\._]/}" ]; then
    LOCAL_PN="${THIS_PN}"
  fi
  local LOCAL_VN="${LOCAL_PN//[-+\.]/_}"
  local LOCAL_VN_PROPERTY="${LOCAL_VN}_$2"
  printf -v "${LOCAL_VN_PROPERTY}" "%s" "${!LOCAL_VN_PROPERTY}$3"
}

################################################################
cpdirs() {
  tar -C "$1" -cf - . | tar -C "$2" -xpf -
}

################################################################
__doinsdir () {
  local src="$1"
  local dst="$2"
  local f
  [ -d "${src}" ] || error "__doinsdir ${src} failed: not a directory"
  pushd "${src}"
  for f in $(find . -type d); do
    insinto "${dst}/$f"
    doins $(find "$f" -maxdepth 1 -not -type d)
  done
  popd
}

__dodocdir () {
  local src="$1"
  local dst="$2"
  local f
  [ -d "${src}" ] || error "__dodocdir ${src} failed: not a directory"
  pushd "${src}"
  for f in $(find . -type d); do
    docinto "${dst}/$f"
    dodoc $(find "$f" -maxdepth 1 -not -type d)
  done
  popd
}

################################################################
inherit cmake lua perl php ocaml qt5 ruby tcl # java mono

NAME="graphviz"
VERSION=2.47.3
RELEASE=1
CATEGORY="Graphics"
SUMMARY="Graph visualization tools"
DESCRIPTION="The Graphviz layout programs take descriptions of graphs in a
simple text language, and make diagrams in several useful formats such as
images and SVG for web pages, Postscript for inclusion in PDF or other
documents; or display in an interactive graph browser."
HOMEPAGE="https://www.graphviz.org/"

GIT_REPO="https://gitlab.com/graphviz/graphviz"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [2.47.3]=2021-06-19T15:20:05+00:00/2.47.3
  [2.47.2]=2021-05-27T00:53:31+00:00/2.47.2
  [2.47.1]=2021-04-17T19:19:13+00:00/2.47.1
  [2.47.0]=2021-03-16T00:04:01+00:00/2.47.0
  [2.46.1]=2021-02-13T17:02:13+00:00/2.46.1
  [2.46.0]=2021-01-18T17:47:31+00:00/2.46.0
  [2.44.1]=2020-06-29T08:46:02+00:00/2.44.1
  [2.44.0]=2020-04-08T09:50:01+02:00/2.44.0
  [2.42.4]=2020-04-06T08:00:49+02:00/2.42.4
  [2.42.3]=2019-10-10T13:50:48-04:00/2.42.3
  [2.42.2]=2019-09-11T22:11:30-04:00/2.42.2
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%%/*}"
REV_DATE_SHORT="${REV_DATE%%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/-/archive/${REV_HASH}/${NAME}-${REV_HASH}.tar.bz2" # GitLab
SRC_DIR="${GIT_BASENAME}-${REV_HASH}"

SRC_URI+=" ${VERSION}-version.m4"

PATCH_URI="
	2.47.3-cmakelists-cygwin.patch
	2.47.0-doxygen-vpath.patch
	2.47.0-cygwin-unix.patch
	2.47.0-no-undefined.patch
	2.47.1-cygwin-webp.patch
"
#	2.40-bindings-guile.patch
#	2.40-bindings-perl.patch
#	2.40-bindings-php.patch
#	2.40-bindings-python2.patch
#	2.40-bindings-python3.patch
#	2.40-bindings-ruby.patch
#	2.40-bindings-tcl.patch
#	2.40-vmalloc.patch
#	2.40-gvedit-qt5.patch

BUILD_REQUIRES="\
  pkg-config\
  gawk\
  bison\
  flex\
  git\
  perl\
  doxygen\
  fontconfig\
  libfontconfig-devel\
  libX11-devel\
  libXt-devel\
  libXmu-devel\
  libXaw-devel\
  libfreetype-devel\
  libgs-devel\
  libgts-devel\
  libglib2.0-devel\
  libQt5Core-devel\
  libQt5Gui-devel\
  libgdk_pixbuf2.0-devel\
  libglut-devel\
  libglade2.0-devel\
  libgtkglext1.0-devel\
  libLASi-devel\
\
  libcairo-devel\
  libexpat-devel\
  libgd-devel\
  libtool\
  libpango1.0-devel\
  zlib-devel\
  librsvg2-devel\
  libvisio0.1-devel\
\
  libgts-devel\
  libwebp-devel\
\
  libjpeg-devel\
  libpng-devel\
\
  guile3.0\
  libguile3.0-devel\
  liblua-devel\
  perl\
  ocaml\
  php-PEAR\
  python36-devel\
  python37-devel\
  python38-devel\
  ruby-devel\
  tcl-devel\
"

gvlibdir="/usr/lib/${NAME}-${PV[1]}.${PV[2]}"
gvpluginabi=6

# guile-gv: need to accomodate parallel guile versions
PKG_NAMES="${NAME} ${NAME}-demo gvedit libgvc6 libgvc-devel
           libcdt5 libcgraph6 libgvpr2 liblab_gamut1 libpathplan4 libxdot4
           guile-gv lua-gv ocaml-gv perl-gv php-gv
           python36-gv python37-gv python38-gv ruby-gv tcl-tcldot"
graphviz_CONTENTS="--exclude=demo --exclude=*.dll --exclude=gvedit* usr/bin/ usr/share/doc/
                   usr/share/${PN}/ usr/share/man/man1/ usr/share/man/man7/"
graphviz_demo_SUMMARY="${SUMMARY} (sample scripts)"
graphviz_demo_CONTENTS="usr/share/${PN}/demo/"
gvedit_SUMMARY="Qt GraphViz editor"
gvedit_CONTENTS="usr/bin/gvedit.exe usr/share/applications/
                 usr/share/doc/graphviz/pdf/gvedit.* usr/share/graphviz/gvedit/
                 usr/share/man/man1/gvedit.* usr/share/pixmaps/"
libgvc6_SUMMARY="GraphViz context library (runtime)"
libgvc6_CONTENTS="--exclude=tcl etc/postinstall/libgvc6.sh etc/preremove/
                  usr/bin/cyggvc-6.dll ${gvlibdir#/}/ usr/sbin/"
libgvc_devel_SUMMARY="GraphViz context library (development)"
libgvc_devel_CONTENTS="--exclude=*gv_guile* --exclude=*-*.3* usr/include/
                       usr/lib/lib* usr/lib/pkgconfig/ usr/share/man/man3/*.3.*"
# utility libraries
libcdt5_SUMMARY="GraphViz container datatype library (runtime)"
libcdt5_CONTENTS="usr/bin/cygcdt-5.dll"
libcgraph6_SUMMARY="GraphViz cgraph library (runtime)"
libcgraph6_CONTENTS="usr/bin/cygcgraph-6.dll"
libgvpr2_SUMMARY="GraphViz pattern scanning library (runtime)"
libgvpr2_CONTENTS="usr/bin/cyggvpr-2.dll"
liblab_gamut1_SUMMARY="GraphViz color labeling library (runtime)"
liblab_gamut1_CONTENTS="usr/bin/cyglab_gamut-1.dll"
libpathplan4_SUMMARY="GraphViz bezier path library (runtime)"
libpathplan4_CONTENTS="usr/bin/cygpathplan-4.dll"
libxdot4_SUMMARY="GraphViz xdot parser library (runtime)"
libxdot4_CONTENTS="usr/bin/cygxdot-4.dll"
# language bindings
guile_gv_CATEGORY="Scheme"
guile_gv_SUMMARY="GraphViz context library (Guile bindings)"
guile_gv_CONTENTS="
	usr/lib/guile/*/extensions/cyggv_guile.dll
	usr/lib/guile/*/extensions/libgv_guile.la
	usr/share/man/man3/guile*
"
java_gv_CATEGORY="Java"
java_gv_SUMMARY="GraphViz context library (Java bindings)"
java_gv_CONTENTS="usr/bin/*gv_java* ${JAVA_DIR#/} usr/share/man/man3/java*"
lua_gv_CATEGORY="Lua"
lua_gv_SUMMARY="GraphViz context library (Lua bindings)"
lua_gv_CONTENTS="${LUA_LIBDIR#/} usr/share/man/man3/lua*"
mono_gv_sharp_CATEGORY="DotNET"
mono_gv_sharp_SUMMARY="GraphViz context library (Mono bindings)"
mono_gv_sharp_CONTENTS="usr/bin/cyggv_sharp.dll usr/lib/mono/ usr/share/man/man3/sharp*"
ocaml_gv_CATEGORY="OCaml"
ocaml_gv_SUMMARY="GraphViz context library (OCaml bindings)"
ocaml_gv_CONTENTS="${OCAML_LIBDIR#/} usr/share/man/man3/ocaml*"
perl_gv_CATEGORY="Perl"
perl_gv_SUMMARY="GraphViz context library (Perl bindings)"
perl_gv_CONTENTS="${PERL_VENDORARCH#/} usr/share/man/man3/perl*"
php_gv_CATEGORY="PHP"
php_gv_SUMMARY="GraphViz context library (PHP bindings)"
php_gv_CONTENTS="${PHP_INI_DIR#/} ${PHP_EXTENSION_DIR#/} usr/share/man/man3/php* ${PHP_PEAR_DIR#/}"
python36_gv_CATEGORY="Python"
python36_gv_SUMMARY="GraphViz context library (Python 3 bindings)"
python36_gv_OBSOLETES="python3-gv"
python36_gv_CONTENTS="usr/lib/python3.6/site-packages/* usr/share/man/man3/python36-*"
python37_gv_CATEGORY="Python"
python37_gv_SUMMARY="GraphViz context library (Python 3 bindings)"
python37_gv_CONTENTS="usr/lib/python3.7/site-packages/* usr/share/man/man3/python37-*"
python38_gv_CATEGORY="Python"
python38_gv_SUMMARY="GraphViz context library (Python 3 bindings)"
python38_gv_CONTENTS="usr/lib/python3.8/site-packages/* usr/share/man/man3/python38-*"
ruby_gv_CATEGORY="Ruby"
ruby_gv_SUMMARY="GraphViz context library (Ruby bindings)"
ruby_gv_CONTENTS="${RUBY_VENDORARCH#/} usr/share/man/man3/ruby*"
tcl_tcldot_CATEGORY="Tcl"
tcl_tcldot_SUMMARY="GraphViz context library (Tcl bindings)"
tcl_tcldot_CONTENTS="usr/lib/tcldot${PV}/ usr/share/man/man3/*tcl*"

DIFF_EXCLUDES="Doxyfile Makefile libltdl AssemblyInfo.cs ltargz.m4 ltdl.m4 macosx"

# ocaml has to be built manually because of flexdll
CYGCONF_ARGS="
	--disable-rpath

	--without-devil
	--without-glade
	--without-gtkgl
	--without-gtkglext

	--enable-guile
	--disable-java
	--enable-lua
	--disable-ocaml
	--enable-perl
	--enable-php
	--disable-python
	--disable-python27
	--enable-python36
	--enable-python37
	--enable-python38
	--disable-r
	--enable-ruby
	--disable-sharp
	--enable-tcl
"

pkgdirargs="
	pkgguiledir=$(guile-config info extensiondir)
	pkglibdir=${gvlibdir}
	txtdir=/usr/share/doc/${NAME}
	htmldir=/usr/share/doc/${NAME}/html
	schemadir=/usr/share/doc/${NAME}/html/schema
	pdfdir=/usr/share/doc/${NAME}/pdf
"

src_compile() {
  cd ${B}
  : ${CYGCMAKE_GENERATOR=Ninja}
  cygcmake -GNinja
  if [ -f build.ninja ]
  then
    cygninja
  else
    cygmake
  fi
  return

	cd ${S}

	inform "autogen"
	./autogen.sh
	cp ${VERSION}-version.m4 version.m4
	cd ${B}
	lndirs

	inform "cygconf"
	./configure --prefix=/usr ${CYGCONF_ARGS}

	inform "cygmake"
	cygmake ${pkgdirargs} CC=${CC} LD=${LD} LDFLAGS='-no-undefined' VISIO_CFLAGS='-std=gnu++11'

	cd ${B}/tclpkg/gv
	inform "gv"

	if inherited java
	then
		cygjavac *.java
		mkdir -p org/graphviz
		mv *.class org/graphviz
		cygjar cf gv.jar org/graphviz/
	fi

	if inherited mono
	then
		${MCS} -target:library -out:gv-sharp.dll *.cs || error "mcs compile failed"
		cat > gv-sharp.dll.config <<-_EOF
<configuration>
    <dllmap dll="gv"  target="cyggv_sharp.dll" />
</configuration>
		_EOF
	fi

	if inherited ocaml
	then
		inform "gv ocaml"
		make libgv_ocaml.la gv.a
		ocamlmklib -v -o gv .libs/libgv_ocaml_la-gv*.o -L${B}/lib/gvc/.libs -L${B}/lib/cgraph/.libs -L${B}/lib/cdt/.libs -lgvc -lcgraph -lcdt -lstdc++
		ocamlc -a -dllib gv.so -o gv.cma swig.cmo gv.cmo
	fi
}

_reset_dir() {
	local d

	for d
	do
		rm -fr ${D}${d}
		dodir ${d}
	done
}

src_install() {
  cd ${B}
  if [ -f build.ninja ]
  then
    ninja_install
  else
    cyginstall
  fi
  return

	cd ${B}
	cyginstall ${pkgdirargs}

	# these libraries are actually modules
	mv ${D}/usr/lib/bin/*.dll ${D}${gvlibdir}/
	rm -f ${D}${gvlibdir}/*.{a,la}

	# This executable is useless as it links against libgvplugin_*
	# The alternative is dot_static (built if --enable-static) but
	# there is really no need for either
	rm -f ${D}/usr/bin/dot_builtins.exe

	newsbin ${D}/usr/bin/dot.exe libgvc6-config.exe

	dodir /etc/postinstall /etc/preremove
	echo "rm -f ${gvlibdir}/config${gvpluginabi}" >> ${D}/etc/preremove/libgvc6.sh
	echo "/usr/sbin/libgvc6-config -c" >> ${D}/etc/postinstall/libgvc6.sh
	chmod +x ${D}/etc/*/*.sh

	newicon ${S}/cmd/gvedit/images/icon.png gvedit.png
	# categories from KGraphViewer
	make_desktop_entry gvedit "GraphViz Editor" gvedit "Graphics;2DGraphics;Viewer;DataVisualization;Qt"

	pushd ${D}/usr/share/man/man3
	for m in gv.3*
	do
		mv ${m} ${m#*3}-gv.3
	done
	popd

	pushd ${D}${gvlibdir}

	if inherited java
	then
		mv java/cyggv_java.dll ${D}/usr/bin/
		dojar ${B}/tclpkg/gv/gv.jar
		rm -fr java/
	fi

	if inherited lua
	then
		_reset_dir ${LUA_LIBDIR}
		mv lua/cyggv_lua.dll ${D}${LUA_LIBDIR}/gv.dll
		rm -fr lua/
	fi

	if inherited mono
	then
		mv sharp/cyggv_sharp.dll ${D}/usr/bin/
		insinto /usr/lib/mono/gv-sharp
		doins ${B}/tclpkg/gv/gv-sharp.dll{,.config}
		rm -fr sharp/
	fi

	if inherited ocaml
	then
		pushd ${B}/tclpkg/gv
		exeinto ${OCAML_LIBDIR}/stublibs
		doexe dllgv.so
		echo gv > ${D}${OCAML_LIBDIR}/stublibs/dllgv.so.owner
		insinto ${OCAML_LIBDIR}/gv
		doins gv.{a,cma,cmi,cmxa,mli}
		echo > ${D}${OCAML_LIBDIR}/gv/META <<_EOF
name="gv"
version="${PV}"
description="OCaml bindings for graphviz"
requires=""
archive(byte)="gv.cma"
archive(native)="gv.cmxa"
_EOF
		newman ${S}/tclpkg/gv/gv.3ocaml ocaml-gv.3
		popd
	fi

	if inherited perl
	then
		_reset_dir ${PERL_VENDORARCH}
		mv perl/gv.pm ${D}${PERL_VENDORARCH}/
		mv perl/cyggv_perl.dll ${D}${PERL_VENDORARCH}/gv.dll
		rm -fr perl/
	fi

	if inherited php
	then
		_reset_dir ${PHP_EXTENSION_DIR} ${PHP_PEAR_DIR}
		rm -fr ${D}/usr/lib/php/modules/ ${D}/usr/share/php/
		mv php/cyggv_php.dll ${D}${PHP_EXTENSION_DIR}/gv.dll
		mv php/gv.php ${D}${PHP_PEAR_DIR}/
		rm -fr php/
		php_postinst
	fi

	for v in 3.6 3.7 3.8
	do
		_reset_dir /usr/lib/python$v/site-packages
		mv python${v/.}/cyggv_python${v/.}.dll ${D}/usr/lib/python$v/site-packages/_gv.dll
		mv python${v/.}/gv.py ${D}/usr/lib/python$v/site-packages/
		rm -fr python${v/.}/
		newman ${S}/tclpkg/gv/gv.3python python${v/.}-gv.3
	done
	rm ${D}/usr/share/man/man3/python-gv.3

	if inherited ruby
	then
		_reset_dir ${RUBY_VENDORARCH}
		mv ruby/cyggv_ruby.* ${D}${RUBY_VENDORARCH}/gv.so
		rm -fr ruby/
	fi

	if inherited tcl
	then
		_reset_dir /usr/lib/tcldot${PV}
		mv tcl/*.dll tcl/*.tcl ${D}/usr/lib/tcldot${PV}/
		rm -fr tcl/
	fi

	popd
}

KEEP_LA_FILES="module"
